<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
  <!ENTITY name         "buddybackup">
  <!ENTITY displayName  "ZFS Buddy Backup">
  <!ENTITY author       "Alexander Wester">
  <!ENTITY version      "2025.01.29">
  <!ENTITY launch       "Settings/BuddyBackup">
  <!ENTITY branch       "main">
  <!ENTITY gitURL       "https://raw.githubusercontent.com/Piratkopia13/unraid-&name;/refs/heads/&branch;">
  <!ENTITY gitRelURL    "https://github.com/Piratkopia13/unraid-&name;/releases/download/&version;">
  <!ENTITY pluginURL    "&gitURL;/&name;.plg">

  <!ENTITY emhttp        "/usr/local/emhttp/plugins/&name;">
  <!ENTITY pkgPath       "/boot/config/plugins/&name;">
  <!ENTITY pkgName       "&name;.txz">
  <!ENTITY pkgMD5        "ae15b844e03c0fb7a14778f623cef769">
]>

<PLUGIN  name="&displayName;"
         author="&author;"
         version="&version;"
         pluginURL="&pluginURL;"
         launch="&launch;"
         icon="&gitURL;/src&emhttp;/buddybackup.png"
         min="6.12.0"
         >
    <CHANGES>
    ##&name;
###2025.01.29
  Added settings section for automatic snapshot creation and pruning
###2025.01.25
  Added restore functionality
###2025.01.19b
  Bug fixes
###2025.01.18 - BuddyBackup
    Initial release
    </CHANGES>

    <!--
    The 'plugin' package file.
    -->
    <FILE Name="&pkgPath;/&pkgName;" Run="upgradepkg --install-new">
      <URL>&gitRelURL;/&pkgName;</URL>
      <MD5>&pkgMD5;</MD5>
    </FILE>

    <!-- Create default buddybackup.cfg -->
    <FILE Name="&pkgPath;/&name;.cfg">
      <INLINE>
        BackupToBuddy=disable
        ReceiveBackups=disable
        ReceiveDestinationRententionHourly=0
        ReceiveDestinationRententionDaily=7
        ReceiveDestinationRententionWeekly=4
        ReceiveDestinationRententionMonthly=3
        ReceiveDestinationRententionYearly=0
      </INLINE>
    </FILE>

    <!-- Install dependencies -->
    <FILE Run="/bin/bash">
        <INLINE>
            source /etc/unraid-version
            major=${version:0:2}
            minor=${version:2:2}
            DEPS=( "perl-Capture-Tiny-0.48-x86_64-1ponce.txz"
                   "perl-Config-IniFiles-2.82-x86_64-3_slonly.txz"
                   "perl-List-MoreUtils-0.425-x86_64-2_slonly.txz" )
            if [[ $((${major/./}*1)) -lt 7 ]]; then
              DEPS+=( "mbuffer-20240107-x86_64-1_SBo.tgz" )
            fi

            function install_dep() {
              local dest="&pkgPath;/deps/${1}"
              local src="&gitURL;/deps/${1}"

              mkdir -p "&pkgPath;/deps"
              if [ ! -f "${dest}" ]; then
                echo "Downloading dependency '${1}'.."
                curl --location --silent --fail "${src}" --output "${dest}"
              fi
              if [ ! -f "${dest}.md5" ]; then
                curl --location --silent --fail "${src}.md5" --output "${dest}.md5"
              fi

              expected_md5=$(cat "${dest}.md5")
              actual_md5=$(md5sum "${dest}" | sed 's/\s.*$//')

              if [ "${actual_md5}" != "${expected_md5}" ]; then
                echo "Mismatched md5 hash for dependency '${1}'. Aborting."
                rm "${dest}"
                exit 1
              elif ! installpkg "$dest"; then
                  echo "Failed to install dependency '${1}'"
                  exit 1
              fi 
            }

            for d in ${DEPS[@]}; do
              install_dep "${d}"
            done
        </INLINE>
    </FILE>
    
    <FILE Run="/bin/bash">
        <INLINE>
            chmod +x &emhttp;/deps/sanoid
            chmod +x &emhttp;/deps/syncoid
            chmod +x &emhttp;/deps/restrict_zfs
            &emhttp;/scripts/rc.buddybackup update

            echo ""
            echo "-----------------------------------------------------------"
            echo " &name; has been installed."
            echo " Happy backups"
            echo " Version: &version;"
            echo "-----------------------------------------------------------"
            echo ""
        </INLINE>
    </FILE>

    <!-- Copy sanoid default conf -->
    <FILE Name="&pkgPath;/sanoid.defaults.conf">
      <LOCAL>&emhttp;/deps/sanoid.defaults.conf</LOCAL>
    </FILE>

    <!--
    The 'remove' script.
    -->
    <FILE Run="/bin/bash" Method="remove">
        <INLINE>
            echo "-----------------------------------------------------------"
            echo " Uninstalling &name;"
            echo "-----------------------------------------------------------"
            echo ""

            &emhttp;/scripts/rc.buddybackup uninstall

            removepkg &pkgPath;/&pkgName;

            echo ""
            echo " &name; has been uninstalled. Dependencies will be gone after next reboot"
            echo ""
        </INLINE>
    </FILE>

</PLUGIN>